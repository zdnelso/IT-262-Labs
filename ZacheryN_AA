# -*- coding: utf-8 -*-
"""ZacheryN_AlternativeAnalysis
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/10oq-LtSY0O82PZYpec52JkrNe-1hxAtw
"""

import pandas as pd

#create dataframe for AA matrix
AA=pd.DataFrame(columns=['criteria', 'weight', 'ratingA', 'ratingB', 'scoreA', 'scoreB', ])
print(AA)

#first step: add a list of criteria
AA['criteria']=['risk', 'ROI', 'customerSatisfaction', 'feasability', 'strategicAlignment']
print(AA)

#second step: identify weights
#weights show relative importance of each criteria
#add up to 100

AA['weight']=[0.15, 0.35, 0.10, 0.10, 0.30]
print(AA)

#step three: rate each alternative across all criteria
#rated on a scale of 1-3
##higher number = better performance

AA['ratingA']= [2,3,2,2,1]
AA['ratingB']= [3,3,1,1,2]
print(AA)

#step four: calculate partial scores by multiplying weights * ratings
#using iterrows( in Python is not recommended- is an anti pattern)

for index, row in AA.iterrows():
  AA['scoreA'][index]=row['ratingA']*row['weight']
  AA['scoreB'][index]=row['ratingB']*row['weight']

print(AA)

#step five: add partial scores to get the totral scores
#which solution is the winner? the one with the highest total score
totalScoreA=0
totalScoreB=0
for index, row in AA.iterrows():
  totalScoreA+=row['scoreA']
  totalScoreB+=row['scoreB']

print('total score for A is {:.2f} and for B is {:.2f}'.format(totalScoreA, totalScoreB))
